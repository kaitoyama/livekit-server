openapi: 3.0.3
info:
  title: traQ microservice for livekit
  version: 1.0.0
  description: トークン発行などlivekitへの橋渡しをするマイクロサービス
  contact:
    name: livekit-server
    url: 'https://github.com/pikachu0310/livekit-server'
tags:
  - name: livekit
    description: LiveKitAPI

paths:
  /ping:
    get:
      summary: サーバーの生存確認
      operationId: pingServer
      responses:
        '200':
          description: Pong
          content:
            text/plain:
              schema:
                type: string
                example: pong

  /test:
    get:
      summary: テスト用
      operationId: test
      responses:
        '200':
          description: OK

  /token:
    get:
      summary: LiveKitトークンを取得
      description: >
        指定したルームに参加するためのLiveKitトークンを取得します。  
        リクエストヘッダに Bearer トークンを含めることで、認証後に LiveKit用トークンを返します。  
        例: `GET /token?room={UUID}`
      operationId: getLiveKitToken
      tags:
        - livekit
      parameters:
        - in: query
          name: room
          schema:
            type: string
            format: uuid
          required: true
          description: 参加するルームのUUID
        - in: query
          name: isWebinar
          schema:
            type: boolean
          required: false
          description: ウェビナールームかどうか(デフォルト false)
      responses:
        '200':
          description: 成功 - LiveKitトークンを返します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /rooms:
    get:
      summary: ルームと参加者の一覧を取得
      description: >
        現在存在する(またはアクティブな)ルームと、そのルームに所属している参加者情報を取得します。
      operationId: getRooms
      tags:
        - livekit
      responses:
        '200':
          description: 成功 - ルームと参加者一覧の取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsListResponse'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /rooms/{roomId}/metadata:
    get:
      summary: ルームのメタデータを取得
      description: >
        ルームのメタデータを取得します。
      operationId: getRoomMetadata
      tags:
        - livekit
      parameters:
        - in: path
          name: roomId
          schema:
            type: string
            format: uuid
          required: true
          description: ルームのUUID
      responses:
        '200':
          description: 成功 - ルームのメタデータを取得
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: string
                    description: ルームに関連付けられたカスタム属性
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    patch:
      summary: ルームのメタデータを更新
      description: >
        ルームのメタデータを更新します。
      operationId: updateRoomMetadata
      tags:
        - livekit
      parameters:
        - in: path
          name: roomId
          schema:
            type: string
            format: uuid
          required: true
          description: ルームのUUID
        - in: body
          name: body
          description: ルームのメタデータ
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: string
                    description: ルームに関連付けられたカスタム属性
      responses:
        '200':
          description: 成功 - ルームのメタデータを更新
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          
  /rooms/{roomId}/participants:
    patch:
      summary: ルームでの発言権限を変更
      description: >
        ルーム内の参加者の発言権限を変更します。
      operationId: changeParticipantRole
      tags:
        - livekit
      parameters:
        - in: path
          name: roomId
          schema:
            type: string
            format: uuid
          required: true
          description: ルームのUUID
        - in: body
          name: body
          description: 発言権限を変更する参加者の情報
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
      responses:
        '200':
          description: 成功 - 発言権限を変更（部分的成功含む）
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        participantId:
                          type: string
                          description: 対象参加者ID
                        status:
                          type: string
                          description: "success もしくは error"
                        errorMessage:
                          type: string
                          description: エラーがある場合の詳細
              example:
                results:
                  - participantId: "user1"
                    status: "success"
                  - participantId: "user2"
                    status: "error"
                    errorMessage: "Invalid participant ID"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error


  /webhook:
    post:
      summary: LiveKit Webhook受信
      description: >
        LiveKit側で設定したWebhookから呼び出されるエンドポイントです。  
        参加者の入室・退出などのイベントを受け取り、サーバ内で処理を行います。
      operationId: liveKitWebhook
      tags:
        - livekit
      requestBody:
        required: true
        content:
          application/webhook+json:
            schema:
              type: object
              description: LiveKit Webhook イベントのペイロード
      responses:
        '200':
          description: Webhookを正常に受信
        '400':
          description: Invalid payload
        '500':
          description: Internal Server Error

  /ws:
    get:
      summary: WebSocketエンドポイント
      description: >
        WebSocketを通じてルームの参加者一覧などをリアルタイムに受け取るためのエンドポイントです。  
        Livekit側から誰かが入室/退出したイベントを受け取った時に、  
        全ての部屋の情報 (RoomWithParticipants) を返します。
      operationId: getWs
      tags:
        - livekit
      responses:
        '101':
          description: Switching Protocols (WebSocket通信開始)
        '500':
          description: Internal Server Error

  /soundboard:
    get:
      summary: サウンドボード用の音声一覧を取得
      description: >
        DBに保存されたサウンドボード情報を取得します。  
        各アイテムには soundId, soundName, stampId が含まれます。
      operationId: getSoundboardList
      tags:
        - livekit
      responses:
        '200':
          description: サウンド一覧の取得に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoundboardListResponse'
        '500':
          description: サーバエラー

    post:
      summary: サウンドボード用の短い音声ファイルをアップロード
      description: >
        15秒程度の短い音声ファイルを multipart/form-data で送信し、S3(互換ストレージ)にアップロードします。  
        クライアントは「soundName」というフィールドを送信し、それをDBに保存して関連付けを行います。  
        また、サーバ側で soundId を自動生成し、S3のファイル名に使用します。
      operationId: postSoundboard
      tags:
        - livekit
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SoundboardUploadRequest'
      responses:
        '200':
          description: アップロード成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoundboardUploadResponse'
        '400':
          description: ファイルが提供されていない等
        '500':
          description: アップロードエラーなどのサーバエラー

  /soundboard/play:
    post:
      summary: アップロード済み音声を LiveKit ルームで再生
      description: >
        S3上にある音声ファイルの署名付きURLを生成し、  
        Ingressを介して指定ルームに音声を流します。  
        リクエストヘッダの認証トークンからユーザIDを取得し、  
        該当ルームに参加しているユーザであれば再生可能とします。
      operationId: postSoundboardPlay
      tags:
        - livekit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoundboardPlayRequest'
      responses:
        '200':
          description: Ingressの作成に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoundboardPlayResponse'
        '400':
          description: パラメータ不足 or ユーザが部屋にいない等
        '401':
          description: 認証エラー
        '500':
          description: Ingress作成失敗などのサーバエラー

components:
  schemas:
    # -------------------------------
    # ルーム参加者関連
    # -------------------------------
    RoomWithParticipants:
      type: object
      properties:
        roomId:
          type: string
          format: uuid
          description: ルームのID
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
        isWebinar:
          type: boolean
          description: ウェビナールームかどうか
        metadata:
          type: string
          description: ルームに関連付けられたカスタム属性
      required:
        - roomId
        - participants
    Participant:
      description: ルーム内の参加者一覧
      type: object
      properties:
        identity:
          type: string
          description: ユーザーID_RandomUUID
        name:
          type: string
          description: 表示名
        joinedAt:
          type: string
          format: date-time
          description: 参加した時刻
        attributes:
          type: object
          additionalProperties:
            type: string
          description: ユーザーに関連付けられたカスタム属性
        canPublish:
          type: boolean
          description: 発言権限

    # GET /rooms レスポンス
    RoomsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/RoomWithParticipants'

    # -------------------------------
    # Webhook, Token関連
    # -------------------------------
    TokenResponse:
      type: object
      properties:
        token:
          type: string
          description: LiveKit用のJWTトークン
      required:
        - token

    # -------------------------------
    # サウンドボード関連
    # -------------------------------
    # GET /soundboard レスポンス
    SoundboardListResponse:
      type: array
      items:
        $ref: '#/components/schemas/SoundboardItem'

    # サウンド一覧の各アイテム
    SoundboardItem:
      type: object
      properties:
        soundId:
          type: string
          description: サーバが発行したサウンドID
        soundName:
          type: string
          description: ユーザが指定した表示用のサウンド名
        stampId:
          type: string
          description: 任意のスタンプID等、サウンドに紐づく拡張情報
        creatorId:
          type: string
          description: 作成者のユーザID
      required:
        - soundId
        - soundName
        - stampId
        - creatorId

    # POST /soundboard multipart/form-data
    SoundboardUploadRequest:
      type: object
      properties:
        audio:
          type: string
          format: binary
          description: アップロードする音声ファイル(20秒以内)
        soundName:
          type: string
          description: ユーザが自由につけるサウンド名
      required:
        - audio
        - soundName

    SoundboardUploadResponse:
      type: object
      properties:
        soundId:
          type: string
          description: 登録されたサウンドID (ファイル名)
      required:
        - soundId

    # POST /soundboard/play
    SoundboardPlayRequest:
      type: object
      properties:
        soundId:
          type: string
          description: サウンドID (DB登録済み)
        roomName:
          type: string
          format: uuid
          description: 再生させたいルームのUUID
      required:
        - soundId
        - roomName

    SoundboardPlayResponse:
      type: object
      properties:
        ingressId:
          type: string
          description: 作成された Ingress のID
        url:
          type: string
          description: 作成された Ingress のストリームURL等
        streamKey:
          type: string
          description: RTMP配信の場合のstream key
      required:
        - ingressId
